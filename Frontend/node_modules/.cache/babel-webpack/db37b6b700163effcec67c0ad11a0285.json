{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../data.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\n\nfunction SelectComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"div\", 9);\n    i0.ɵɵelement(2, \"input\", 10);\n    i0.ɵɵelementStart(3, \"label\", 11);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const difficulty_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"'difficulty_' + \", difficulty_r2, \"\");\n    i0.ɵɵpropertyInterpolate(\"value\", difficulty_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"'difficulty_' + \", difficulty_r2, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(difficulty_r2);\n  }\n}\n\nfunction SelectComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"div\", 12);\n    i0.ɵɵelement(2, \"input\", 13);\n    i0.ɵɵelementStart(3, \"label\", 11);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const category_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"'category_' + \", category_r4.id, \"\");\n    i0.ɵɵpropertyInterpolate(\"value\", category_r4.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"'category_' + \", category_r4.id, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", category_r4.name, \" \");\n  }\n}\n\nexport let SelectComponent = /*#__PURE__*/(() => {\n  class SelectComponent {\n    constructor(dataService, formBuilder, router) {\n      this.dataService = dataService;\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.difficulties = [];\n      this.categories = [];\n      this.startGameForm = this.formBuilder.group({\n        numberOfQuestions: 5,\n        difficulty: '',\n        categoryId: 0\n      });\n    }\n\n    ngOnInit() {\n      this.dataService.sendGetDifficultyRequest().subscribe(data => {\n        console.log(\"Received difficulties: \", data);\n        this.difficulties = data;\n      });\n      this.dataService.sendGetCategoriesRequest().subscribe(data => {\n        console.log(\"Received categories: \", data);\n        this.categories = data;\n      });\n    }\n\n    onSubmit() {\n      let dto = this.startGameForm.getRawValue();\n      console.log(\"Sending start game request: \", dto);\n      this.dataService.sendPostStartGameRequest(dto).subscribe(resp => {\n        console.log(\"Start game response: \", resp);\n\n        if (resp.status == 201) {\n          console.log(\"Start game response as expected, moving to actual game...\");\n          this.goToGame();\n        }\n      });\n    }\n\n    goToGame() {\n      this.router.navigate(['/game']);\n    }\n\n  }\n\n  SelectComponent.ɵfac = function SelectComponent_Factory(t) {\n    return new (t || SelectComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  SelectComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SelectComponent,\n    selectors: [[\"app-select\"]],\n    decls: 23,\n    vars: 3,\n    consts: [[\"id\", \"options\"], [1, \"container\"], [\"action\", \"#\", \"method\", \"post\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-row\"], [1, \"form-group\"], [\"for\", \"numberOfQuestions\"], [\"name\", \"numberOfQuestions\", \"id\", \"numberOfQuestions\", \"formControlName\", \"numberOfQuestions\", \"type\", \"number\", \"min\", \"1\", \"max\", \"20\", \"step\", \"1\", \"value\", \"5\", 1, \"form-control\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"form-check\", \"form-check-inline\"], [\"type\", \"radio\", \"name\", \"difficulty\", \"formControlName\", \"difficulty\", 1, \"form-check-input\", 3, \"id\", \"value\"], [1, \"form-check-label\", 3, \"for\"], [1, \"form-check\"], [\"type\", \"radio\", \"name\", \"categoryId\", \"formControlName\", \"categoryId\", 1, \"form-check-input\", 3, \"id\", \"value\"]],\n    template: function SelectComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function SelectComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"h4\");\n        i0.ɵɵtext(6, \"Questions:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"label\", 5);\n        i0.ɵɵtext(8, \"Number: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 4);\n        i0.ɵɵelementStart(11, \"h4\");\n        i0.ɵɵtext(12, \"Difficulty:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(13, SelectComponent_div_13_Template, 5, 4, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 3);\n        i0.ɵɵelementStart(15, \"div\", 4);\n        i0.ɵɵelementStart(16, \"h4\");\n        i0.ɵɵtext(17, \"Category:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(18, SelectComponent_div_18_Template, 5, 4, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 3);\n        i0.ɵɵelementStart(20, \"div\", 4);\n        i0.ɵɵelementStart(21, \"button\", 8);\n        i0.ɵɵtext(22, \"Play!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.startGameForm);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngForOf\", ctx.difficulties);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n      }\n    },\n    directives: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.MinValidator, i2.MaxValidator, i2.NgControlStatus, i2.FormControlName, i4.NgForOf, i2.RadioControlValueAccessor],\n    styles: [\"\"]\n  });\n  return SelectComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}