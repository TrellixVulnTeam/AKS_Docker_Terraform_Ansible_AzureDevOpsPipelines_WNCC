{"ast":null,"code":"import { GameOptionsDto } from '../dtos/gameOptions.dto';\nimport { GameStateDto } from '../dtos/gameState.dto';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../data.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\n\nfunction GameComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"div\", 7);\n    i0.ɵɵelement(2, \"input\", 8);\n    i0.ɵɵelementStart(3, \"label\", 9);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const answer_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"answer_\", i_r2, \"\");\n    i0.ɵɵpropertyInterpolate(\"value\", answer_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"answer_\", i_r2, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", answer_r1, \" \");\n  }\n}\n\nexport let GameComponent = /*#__PURE__*/(() => {\n  class GameComponent {\n    constructor(dataService, formBuilder, router) {\n      this.dataService = dataService;\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.gameState = new GameStateDto(0, 0, new GameOptionsDto(0, \"\", 0, \"\"), \"\", []);\n      this.submitAnswerForm = this.formBuilder.group({\n        answer: ''\n      });\n    }\n\n    ngOnInit() {\n      this.dataService.sendGetGameState().subscribe(data => {\n        console.log(\"Received gameState: \", data);\n\n        if (data.currentQuestionNumber > data.gameOptions.numberOfQuestions) {\n          this.goToSummary();\n        } else {\n          this.gameState = data;\n        }\n      });\n    }\n\n    onSubmit() {\n      let dto = this.submitAnswerForm.getRawValue();\n      console.log(\"Sending user answer request: \", dto);\n      this.dataService.sendPostUserAnswerRequest(dto).subscribe(resp => {\n        console.log(\"Send post user answer response: \", resp);\n\n        if (resp.status == 202) {\n          console.log(\"Send post user answer response as expected, moving to next question\");\n          this.submitAnswerForm.reset();\n          this.ngOnInit();\n        }\n      });\n    }\n\n    goToSummary() {\n      this.router.navigate(['/summary']);\n    }\n\n  }\n\n  GameComponent.ɵfac = function GameComponent_Factory(t) {\n    return new (t || GameComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  GameComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GameComponent,\n    selectors: [[\"app-game\"]],\n    decls: 17,\n    vars: 5,\n    consts: [[\"id\", \"options\"], [1, \"container\"], [\"action\", \"#\", \"method\", \"post\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-row\"], [1, \"form-group\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"form-check\"], [\"type\", \"radio\", \"name\", \"answer\", \"formControlName\", \"answer\", 1, \"form-check-input\", 3, \"id\", \"value\"], [1, \"form-check-label\", 3, \"for\"]],\n    template: function GameComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function GameComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"h3\");\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"h4\");\n        i0.ɵɵtext(7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 3);\n        i0.ɵɵelementStart(9, \"div\", 4);\n        i0.ɵɵelementStart(10, \"p\");\n        i0.ɵɵtext(11, \"Select correct answer:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(12, GameComponent_div_12_Template, 5, 4, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 3);\n        i0.ɵɵelementStart(14, \"div\", 4);\n        i0.ɵɵelementStart(15, \"button\", 6);\n        i0.ɵɵtext(16, \"Next\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.submitAnswerForm);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate2(\" Question \", ctx.gameState.currentQuestionNumber, \" / \", ctx.gameState.gameOptions.numberOfQuestions, \": \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.gameState.currentQuestionText);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.gameState.currentQuestionAnswers);\n      }\n    },\n    directives: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i4.NgForOf, i2.RadioControlValueAccessor, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlName],\n    styles: [\"\"]\n  });\n  return GameComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}